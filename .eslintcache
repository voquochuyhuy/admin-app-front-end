[{"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\log\\log.js":"1","D:\\HocTapUIT\\admin-app-front-end\\src\\layout\\auth.js":"2","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\menber-management\\menber.js":"3","D:\\HocTapUIT\\admin-app-front-end\\src\\layout\\admin.js":"4","D:\\HocTapUIT\\admin-app-front-end\\src\\index.js":"5","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\post-management\\post.js":"6","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\report\\report.js":"7","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\user-management\\user.js":"8","D:\\HocTapUIT\\admin-app-front-end\\src\\global\\globalFunction.js":"9","D:\\HocTapUIT\\admin-app-front-end\\src\\routes.js":"10","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialog.js":"11","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\buttonTriggerDialog.js":"12","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialogReportDetail.js":"13","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialogAddMember.js":"14"},{"size":12548,"mtime":1611580496343,"results":"15","hashOfConfig":"16"},{"size":2804,"mtime":1609946635957,"results":"17","hashOfConfig":"16"},{"size":11884,"mtime":1611587718723,"results":"18","hashOfConfig":"16"},{"size":3605,"mtime":1610163646881,"results":"19","hashOfConfig":"16"},{"size":509,"mtime":1609762541364,"results":"20","hashOfConfig":"16"},{"size":15782,"mtime":1611666589961,"results":"21","hashOfConfig":"16"},{"size":13005,"mtime":1611672166147,"results":"22","hashOfConfig":"16"},{"size":13783,"mtime":1611670951367,"results":"23","hashOfConfig":"16"},{"size":237,"mtime":1609943490984,"results":"24","hashOfConfig":"16"},{"size":1062,"mtime":1609944300593,"results":"25","hashOfConfig":"16"},{"size":1399,"mtime":1611665345241,"results":"26","hashOfConfig":"16"},{"size":693,"mtime":1611666565258,"results":"27","hashOfConfig":"16"},{"size":4311,"mtime":1611670625982,"results":"28","hashOfConfig":"16"},{"size":3027,"mtime":1611590538818,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hgdtk0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\log\\log.js",["65","66","67","68","69","70","71","72","73","74","75","76","77"],"D:\\HocTapUIT\\admin-app-front-end\\src\\layout\\auth.js",[],["78","79"],"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\menber-management\\menber.js",["80"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport axios from \"axios\";\r\nimport { ShowLoadingIcon, HideLoadingIcon } from \"../../global/globalFunction\";\r\nimport SimpleDialogDemo from \"../../components/buttonTriggerDialog\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DialogAddMember from \"../../components/dialogAddMember\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Email\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Name\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Role\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          0 selected\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <SimpleDialogDemo />\r\n        </Tooltip>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Menber() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [isOpenAddMemberDialog, setIsOpenAddMemberDialog] = React.useState(false);\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const onClickAddMember = async () => {\r\n    setIsOpenAddMemberDialog(true);\r\n  };\r\n  const handleSaveMember = () =>{\r\n\r\n  }\r\n  const onCloseDialogAddMember = () =>{\r\n    setIsOpenAddMemberDialog(false);\r\n  }\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      ShowLoadingIcon();\r\n      await axios\r\n        .get(\"https://test-deploy-express.herokuapp.com/admin/admin-list\")\r\n        .then((res) => {\r\n          const data = res.data.data;\r\n          setRows(data);\r\n          HideLoadingIcon();\r\n        });\r\n    }\r\n    fetchData();\r\n\r\n    return () => {};\r\n  }, []);\r\n  return (\r\n    <div className=\"member-management\">\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\",padding:\"7px\" }}>\r\n            <Button className=\"add-member-button\" onClick={onClickAddMember}>\r\n              Add\r\n            </Button>\r\n          </div>\r\n          <EnhancedTableToolbar numSelected={selected.length} />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, row.id)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            checked={isItemSelected}\r\n                            inputProps={{ \"aria-labelledby\": labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {row.email}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.username}</TableCell>\r\n                        <TableCell align=\"right\">{row.role}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <DialogAddMember\r\n          open={isOpenAddMemberDialog}\r\n          handleDelete={handleSaveMember}\r\n          onClose={onCloseDialogAddMember}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\HocTapUIT\\admin-app-front-end\\src\\layout\\admin.js",["81","82","83"],"import React, { useEffect } from \"react\";\r\nimport { NavLink, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport routes from \"../routes\";\r\nimport \"../styles/admin.css\";\r\nimport { Divider } from \"@material-ui/core\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color : 'white',\r\n    backgroundColor : '#ff7f50'\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\nconst Admin = (props) => {\r\n  const classes = useStyles();\r\n  const getRoutes = (routes) => {\r\n    const result = routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n  const Logout = ()=>{\r\n    localStorage.clear();\r\n    props.history.push(\"/auth\");\r\n  }\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"access_token\") === null) {\r\n      props.history.push(\"/auth\");\r\n    } else props.history.push(\"/post-management\");\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\"  className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Together better Admin App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <div className={classes.drawerContainer}>\r\n            <List>\r\n              {routes.map(\r\n                (it, index) => (\r\n                  <NavLink to={it.path} activeClassName=\"selected\" className=\"navlink-item\" key={index}>\r\n                    <ListItemIcon>\r\n                      {it.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={it.name} />\r\n                  </NavLink>\r\n                )\r\n              )}\r\n              <Divider/>\r\n              <ListItem button onClick={Logout}>\r\n                <ListItemIcon> <ExitToAppIcon/></ListItemIcon>\r\n                <ListItemText primary='Logout' />\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <Toolbar />\r\n          <Switch>{getRoutes(routes)}</Switch>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Admin;\r\n",["84","85"],"D:\\HocTapUIT\\admin-app-front-end\\src\\index.js",[],["86","87"],"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\post-management\\post.js",["88","89","90","91"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { ShowLoadingIcon, HideLoadingIcon } from \"../../global/globalFunction\";\r\nimport SimpleDialogDemo from \"../../components/buttonTriggerDialog\";\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n//   createData(\"Donut\", 452, 25.0, 51, 4.9),\r\n//   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n//   createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n//   createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n//   createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\r\n//   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n//   createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\r\n//   createData(\"KitKat\", 518, 26.0, 65, 7.0),\r\n//   createData(\"Lollipop\", 392, 0.2, 98, 0.0),\r\n//   createData(\"Marshmallow\", 318, 0, 81, 2.0),\r\n//   createData(\"Nougat\", 360, 19.0, 9, 37.0),\r\n//   createData(\"Oreo\", 437, 18.0, 63, 4.0),\r\n// ];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Question Type\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Content\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Votes\" },\r\n  {\r\n    id: \"carbs\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Created At\",\r\n  },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Updated At\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          0 selected\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <SimpleDialogDemo handleDetele={props.handleDetele} />\r\n        </Tooltip>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Post() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [overviewData, setOverviewData]= React.useState({\r\n    totalActiveUser : 0,\r\n    totalSession : 0,\r\n    averageSession:0\r\n  });\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.Id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const handleDetelePost = async () => {\r\n    ShowLoadingIcon();\r\n    await axios\r\n      .delete(\"https://test-deploy-express.herokuapp.com/question\", {\r\n        id: selected,\r\n      })\r\n      .then((res) => {\r\n        fetchData();\r\n      });\r\n  };\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  const fetchData = async () => {\r\n    ShowLoadingIcon();\r\n    await axios\r\n      .get(\"https://test-deploy-express.herokuapp.com/question\")\r\n      .then(async (res) => {\r\n        const data = res.data.data;\r\n        setRows(data);\r\n        await axios\r\n          .get(\"https://test-deploy-express.herokuapp.com/report/dashboard\")\r\n          .then((res) => {\r\n           const totalActiveUser = res.data.data.totalActiveUser[0]['COUNT(*)'];\r\n           const numberOfLog = res.data.data.numberOfLog[0]['COUNT(*)'];\r\n          //  const oldestLog = res.data.data.oldest[0];\r\n           \r\n           setOverviewData({\r\n            totalActiveUser,\r\n            totalSession : numberOfLog,\r\n            averageSession: 400.5\r\n           })\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            HideLoadingIcon();\r\n          });\r\n        HideLoadingIcon();\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    return () => {};\r\n  }, []);\r\n  return (\r\n    <div className=\"post-management\">\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <div className=\"overview\">\r\n            <div className=\"total-active-user\">\r\n              <div className=\"overview-content\">\r\n                <div className=\"icon\">\r\n                  <GroupIcon />\r\n                </div>\r\n                <div className=\"overview-text\">\r\n                  <h3>Total active user</h3>\r\n                  <div className=\"value\">{overviewData.totalActiveUser}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"compare-text\">\r\n                Compare to last week :{\" \"}\r\n                <span style={{ color: \"green\" }}>+47%</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"total-sessions\">\r\n              <div className=\"overview-content\">\r\n                <div className=\"icon\">\r\n                  <ExitToAppIcon />\r\n                </div>\r\n                <div className=\"overview-text\">\r\n                  <h3>Total sessions</h3>\r\n                  <div className=\"value\">{overviewData.totalSession}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"compare-text\">\r\n                Compare to last week :{\" \"}\r\n                <span style={{ color: \"green\" }}>+50%</span>{\" \"}\r\n              </div>\r\n            </div>\r\n            <div className=\"average-session-duration\">\r\n              <div className=\"overview-content\">\r\n                <div className=\"icon\">\r\n                  <TimerIcon />\r\n                </div>\r\n                <div className=\"overview-text\">\r\n                  <h3>Session Duration</h3>\r\n                  <div className=\"value\">{overviewData.averageSession}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"compare-text\">\r\n                Compare to last week :{\" \"}\r\n                <span style={{ color: \"green\" }}>+10%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            handleDetele={handleDetelePost}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.Id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, row.Id)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            checked={isItemSelected}\r\n                            inputProps={{ \"aria-labelledby\": labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {row.questionType}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.content}</TableCell>\r\n                        <TableCell align=\"right\">{+row.votes}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {moment(row.createdAt).format(\"DD-MM-YYYY hh:mm:ss\")}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {moment(row.updatedAt).format(\"DD-MM-YYYY hh:mm:ss\")}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\report\\report.js",["92","93","94","95","96"],"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\user-management\\user.js",["97","98","99","100","101"],"D:\\HocTapUIT\\admin-app-front-end\\src\\global\\globalFunction.js",[],["102","103"],"D:\\HocTapUIT\\admin-app-front-end\\src\\routes.js",[],"D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialog.js",[],"D:\\HocTapUIT\\admin-app-front-end\\src\\components\\buttonTriggerDialog.js",["104"],"D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialogReportDetail.js",[],"D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialogAddMember.js",["105"],{"ruleId":"106","severity":1,"message":"107","line":14,"column":8,"nodeType":"108","messageId":"109","endLine":14,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":16,"column":8,"nodeType":"108","messageId":"109","endLine":16,"endColumn":16},{"ruleId":"106","severity":1,"message":"111","line":17,"column":8,"nodeType":"108","messageId":"109","endLine":17,"endColumn":18},{"ruleId":"106","severity":1,"message":"112","line":18,"column":8,"nodeType":"108","messageId":"109","endLine":18,"endColumn":15},{"ruleId":"106","severity":1,"message":"113","line":19,"column":8,"nodeType":"108","messageId":"109","endLine":19,"endColumn":18},{"ruleId":"106","severity":1,"message":"114","line":20,"column":8,"nodeType":"108","messageId":"109","endLine":20,"endColumn":22},{"ruleId":"106","severity":1,"message":"115","line":24,"column":8,"nodeType":"108","messageId":"109","endLine":24,"endColumn":24},{"ruleId":"106","severity":1,"message":"116","line":86,"column":5,"nodeType":"108","messageId":"109","endLine":86,"endColumn":21},{"ruleId":"106","severity":1,"message":"117","line":89,"column":5,"nodeType":"108","messageId":"109","endLine":89,"endColumn":16},{"ruleId":"106","severity":1,"message":"118","line":90,"column":5,"nodeType":"108","messageId":"109","endLine":90,"endColumn":13},{"ruleId":"106","severity":1,"message":"119","line":227,"column":17,"nodeType":"108","messageId":"109","endLine":227,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":282,"column":22,"nodeType":"122","messageId":"123","endLine":282,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":288,"column":50,"nodeType":"122","messageId":"123","endLine":288,"endColumn":51},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"106","severity":1,"message":"119","line":217,"column":17,"nodeType":"108","messageId":"109","endLine":217,"endColumn":25},{"ruleId":"106","severity":1,"message":"128","line":2,"column":34,"nodeType":"108","messageId":"109","endLine":2,"endColumn":44},{"ruleId":"106","severity":1,"message":"129","line":14,"column":8,"nodeType":"108","messageId":"109","endLine":14,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":74,"column":6,"nodeType":"132","endLine":74,"endColumn":8,"suggestions":"133"},{"ruleId":"124","replacedBy":"134"},{"ruleId":"126","replacedBy":"135"},{"ruleId":"124","replacedBy":"136"},{"ruleId":"126","replacedBy":"137"},{"ruleId":"106","severity":1,"message":"111","line":17,"column":8,"nodeType":"108","messageId":"109","endLine":17,"endColumn":18},{"ruleId":"106","severity":1,"message":"113","line":19,"column":8,"nodeType":"108","messageId":"109","endLine":19,"endColumn":18},{"ruleId":"106","severity":1,"message":"114","line":23,"column":8,"nodeType":"108","messageId":"109","endLine":23,"endColumn":22},{"ruleId":"106","severity":1,"message":"119","line":248,"column":17,"nodeType":"108","messageId":"109","endLine":248,"endColumn":25},{"ruleId":"106","severity":1,"message":"138","line":27,"column":8,"nodeType":"108","messageId":"109","endLine":27,"endColumn":20},{"ruleId":"106","severity":1,"message":"116","line":89,"column":5,"nodeType":"108","messageId":"109","endLine":89,"endColumn":21},{"ruleId":"106","severity":1,"message":"117","line":92,"column":5,"nodeType":"108","messageId":"109","endLine":92,"endColumn":16},{"ruleId":"106","severity":1,"message":"118","line":93,"column":5,"nodeType":"108","messageId":"109","endLine":93,"endColumn":13},{"ruleId":"106","severity":1,"message":"119","line":213,"column":17,"nodeType":"108","messageId":"109","endLine":213,"endColumn":25},{"ruleId":"106","severity":1,"message":"111","line":17,"column":8,"nodeType":"108","messageId":"109","endLine":17,"endColumn":18},{"ruleId":"106","severity":1,"message":"113","line":19,"column":8,"nodeType":"108","messageId":"109","endLine":19,"endColumn":18},{"ruleId":"106","severity":1,"message":"114","line":20,"column":8,"nodeType":"108","messageId":"109","endLine":20,"endColumn":22},{"ruleId":"106","severity":1,"message":"139","line":24,"column":10,"nodeType":"108","messageId":"109","endLine":24,"endColumn":16},{"ruleId":"106","severity":1,"message":"119","line":246,"column":17,"nodeType":"108","messageId":"109","endLine":246,"endColumn":25},{"ruleId":"124","replacedBy":"140"},{"ruleId":"126","replacedBy":"141"},{"ruleId":"106","severity":1,"message":"139","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"142","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":19},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'SimpleDialogDemo' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'setDense' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'useHistory' is defined but never used.","'MailIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["145"],["143"],["144"],["143"],["144"],"'MoreVertIcon' is defined but never used.","'Button' is defined but never used.",["143"],["144"],"'WarningIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [props.history]",{"range":"148","text":"149"},[2115,2117],"[props.history]"]