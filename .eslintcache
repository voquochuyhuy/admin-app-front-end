[{"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\log\\log.js":"1","D:\\HocTapUIT\\admin-app-front-end\\src\\layout\\auth.js":"2","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\menber-management\\menber.js":"3","D:\\HocTapUIT\\admin-app-front-end\\src\\layout\\admin.js":"4","D:\\HocTapUIT\\admin-app-front-end\\src\\index.js":"5","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\post-management\\post.js":"6","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\report\\report.js":"7","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\user-management\\user.js":"8","D:\\HocTapUIT\\admin-app-front-end\\src\\global\\globalFunction.js":"9","D:\\HocTapUIT\\admin-app-front-end\\src\\routes.js":"10","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialog.js":"11","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\buttonTriggerDialog.js":"12","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialogReportDetail.js":"13","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialogAddMember.js":"14","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\help\\help.js":"15","D:\\HocTapUIT\\admin-app-front-end\\src\\firebase.js":"16"},{"size":12580,"mtime":1613570138979,"results":"17","hashOfConfig":"18"},{"size":2798,"mtime":1613142340681,"results":"19","hashOfConfig":"18"},{"size":10247,"mtime":1613493722838,"results":"20","hashOfConfig":"18"},{"size":3599,"mtime":1613142343400,"results":"21","hashOfConfig":"18"},{"size":509,"mtime":1609762541364,"results":"22","hashOfConfig":"18"},{"size":9663,"mtime":1613525930584,"results":"23","hashOfConfig":"18"},{"size":14307,"mtime":1613798129291,"results":"24","hashOfConfig":"18"},{"size":10056,"mtime":1613796683798,"results":"25","hashOfConfig":"18"},{"size":237,"mtime":1609943490984,"results":"26","hashOfConfig":"18"},{"size":1294,"mtime":1613795351969,"results":"27","hashOfConfig":"18"},{"size":1442,"mtime":1613015119291,"results":"28","hashOfConfig":"18"},{"size":1958,"mtime":1613493013910,"results":"29","hashOfConfig":"18"},{"size":5272,"mtime":1613796347460,"results":"30","hashOfConfig":"18"},{"size":3541,"mtime":1613493442314,"results":"31","hashOfConfig":"18"},{"size":14054,"mtime":1613796420510,"results":"32","hashOfConfig":"18"},{"size":1228,"mtime":1613757490722,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hgdtk0",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\log\\log.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"D:\\HocTapUIT\\admin-app-front-end\\src\\layout\\auth.js",[],"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\menber-management\\menber.js",["89","90","91","92","93"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { ShowLoadingIcon, HideLoadingIcon } from \"../../global/globalFunction\";\r\nimport SimpleDialogDemo from \"../../components/buttonTriggerDialog\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DialogAddMember from \"../../components/dialogAddMember\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Email\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Name\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Role\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell padding=\"checkbox\">Action</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Menber() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [isOpenAddMemberDialog, setIsOpenAddMemberDialog] = React.useState(\r\n    false\r\n  );\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const onClickAddMember = async () => {\r\n    setIsOpenAddMemberDialog(true);\r\n  };\r\n  const handleSaveMember = () => {};\r\n  const callBackDeleteSuccess = (item) => {\r\n    const pRows = rows.filter((it) => it.id !== item.id);\r\n    setRows(pRows);\r\n  };\r\n  const onCloseDialogAddMember = () => {\r\n    setIsOpenAddMemberDialog(false);\r\n  };\r\n  const callBackAddSuccess = (data) => {\r\n    const newRow = [...rows];\r\n    newRow.push(data);\r\n    setRows(newRow);\r\n  };\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      ShowLoadingIcon();\r\n      await axios\r\n        .get(\"https://test-deploy-express.herokuapp.com/admin/admin-list\")\r\n        .then((res) => {\r\n          const data = res.data.data;\r\n          console.log(data);\r\n          setRows(data);\r\n          HideLoadingIcon();\r\n        });\r\n    }\r\n    fetchData();\r\n\r\n    return () => {};\r\n  }, []);\r\n  return (\r\n    <div className=\"member-management\">\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              padding: \"7px\",\r\n            }}\r\n          >\r\n            <Button className=\"add-member-button\" onClick={onClickAddMember}>\r\n              Add\r\n            </Button>\r\n          </div>\r\n\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, row.id)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                          {row.email}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.username}</TableCell>\r\n                        <TableCell align=\"right\">{row.role}</TableCell>\r\n                        <TableCell padding=\"checkbox\">\r\n                          {row.role === \"Admin\" ? (\r\n                            <SimpleDialogDemo\r\n                              type=\"member\"\r\n                              item={row}\r\n                              callBackDeleteSuccess={callBackDeleteSuccess}\r\n                            />\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <DialogAddMember\r\n          open={isOpenAddMemberDialog}\r\n          callBackAddSuccess={callBackAddSuccess}\r\n          onClose={onCloseDialogAddMember}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["94","95"],"D:\\HocTapUIT\\admin-app-front-end\\src\\layout\\admin.js",["96","97","98"],"import React, { useEffect } from \"react\";\r\nimport { NavLink, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport routes from \"../routes\";\r\nimport \"../styles/admin.css\";\r\nimport { Divider } from \"@material-ui/core\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color : 'white',\r\n    backgroundColor : '#ff7f50'\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\nconst Admin = (props) => {\r\n  const classes = useStyles();\r\n  const getRoutes = (routes) => {\r\n    const result = routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n  const Logout = ()=>{\r\n    localStorage.clear();\r\n    props.history.push(\"/auth\");\r\n  }\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"access_token\") === null) {\r\n      props.history.push(\"/auth\");\r\n    } else props.history.push(\"/dashboard\");\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\"  className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Together better Admin App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <div className={classes.drawerContainer}>\r\n            <List>\r\n              {routes.map(\r\n                (it, index) => (\r\n                  <NavLink to={it.path} activeClassName=\"selected\" className=\"navlink-item\" key={index}>\r\n                    <ListItemIcon>\r\n                      {it.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={it.name} />\r\n                  </NavLink>\r\n                )\r\n              )}\r\n              <Divider/>\r\n              <ListItem button onClick={Logout}>\r\n                <ListItemIcon> <ExitToAppIcon/></ListItemIcon>\r\n                <ListItemText primary='Logout' />\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <Toolbar />\r\n          <Switch>{getRoutes(routes)}</Switch>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Admin;\r\n","D:\\HocTapUIT\\admin-app-front-end\\src\\index.js",[],["99","100"],"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\post-management\\post.js",["101","102","103","104"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { ShowLoadingIcon, HideLoadingIcon } from \"../../global/globalFunction\";\r\nimport SimpleDialogDemo from \"../../components/buttonTriggerDialog\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Question Type\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Content\" },\r\n  // { id: \"fat\", numeric: true, disablePadding: false, label: \"Votes\" },\r\n  {\r\n    id: \"carbs\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Created At\",\r\n  },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Updated At\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        \r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell padding=\"checkbox\">\r\n          Action\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Post() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [rows, setRows] = React.useState([]);\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.Id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const callBackDeleteSuccess = (item)=>{\r\n    const pRows = rows.filter(it=>it.Id !== item.Id);\r\n    setRows(pRows);\r\n  };\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  const fetchData = async () => {\r\n    ShowLoadingIcon();\r\n    await axios\r\n      .get(\"https://test-deploy-express.herokuapp.com/question\")\r\n      .then(async (res) => {\r\n        const data = res.data.data;\r\n        setRows(data);\r\n        HideLoadingIcon();\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    return () => {};\r\n  }, []);\r\n  return (\r\n    <div className=\"post-management\">\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.Id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, row.Id)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        \r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                        >\r\n                          {row.type}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" style={{maxWidth:\"250px\"}}>{row.content}</TableCell>\r\n                        {/* <TableCell align=\"right\">{+row.votes}</TableCell> */}\r\n                        <TableCell align=\"right\">\r\n                          {moment(row.createdAt).format(\"DD-MM-YYYY hh:mm:ss\")}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {moment(row.updatedAt).format(\"DD-MM-YYYY hh:mm:ss\")}\r\n                        </TableCell>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <SimpleDialogDemo type='question' item={row} callBackDeleteSuccess={callBackDeleteSuccess}/>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["105","106"],"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\report\\report.js",["107","108","109","110","111"],"D:\\HocTapUIT\\admin-app-front-end\\src\\views\\user-management\\user.js",["112","113","114","115","116","117"],"D:\\HocTapUIT\\admin-app-front-end\\src\\global\\globalFunction.js",[],"D:\\HocTapUIT\\admin-app-front-end\\src\\routes.js",[],"D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialog.js",[],["118","119"],"D:\\HocTapUIT\\admin-app-front-end\\src\\components\\buttonTriggerDialog.js",["120"],"import React from \"react\";\r\nimport SimpleDialog from \"./dialog\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport axios from \"axios\";\r\nimport { HideLoadingIcon, ShowLoadingIcon } from \"../global/globalFunction\";\r\n\r\nexport default function SimpleDialogDemo(props) {\r\n  const { type, item,callBackDeleteSuccess } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDelete = async () => {\r\n    setOpen(false);\r\n    ShowLoadingIcon();\r\n    \r\n    switch (type) {\r\n      case \"question\":\r\n        await axios.delete(`https://test-deploy-express.herokuapp.com/question/${item.Id}`).then(res=>{\r\n            HideLoadingIcon();\r\n            callBackDeleteSuccess(item);\r\n        }).catch(err=>{\r\n          HideLoadingIcon();\r\n        });\r\n        break;\r\n      case \"user\":\r\n        await axios.delete(`https://test-deploy-express.herokuapp.com/user/${item.id}`,{\r\n          id : item.id\r\n        }).then(res=>{\r\n          HideLoadingIcon();\r\n          callBackDeleteSuccess(item);\r\n        }).catch(err=>{\r\n          HideLoadingIcon();\r\n          callBackDeleteSuccess(item);\r\n        });;\r\n        break;\r\n      case \"member\":\r\n        await axios.delete(`https://test-deploy-express.herokuapp.com/admin/${item.id}`,{\r\n          id : item.id\r\n        }).then(res=>{\r\n          HideLoadingIcon();\r\n          callBackDeleteSuccess(item);\r\n        }).catch(err=>{\r\n          HideLoadingIcon();\r\n          callBackDeleteSuccess(item);\r\n        });;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton aria-label=\"delete\" onClick={handleClickOpen}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <SimpleDialog open={open} onClose={handleClose} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n}\r\n","D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialogReportDetail.js",["121"],"D:\\HocTapUIT\\admin-app-front-end\\src\\components\\dialogAddMember.js",["122"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { HideLoadingIcon, ShowLoadingIcon } from \"../global/globalFunction\";\r\nimport axios from \"axios\";\r\n\r\nexport default function DialogAddMember(props) {\r\n  const { onClose, open } = props;\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n  const handleChangeTextField = (e, type) => {\r\n    switch (type) {\r\n      case \"username\":\r\n        setUsername(e.target.value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(e.target.value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleClickOK = async () => {\r\n    ShowLoadingIcon();\r\n    await axios\r\n      .post(\"https://test-deploy-express.herokuapp.com/admin\", {\r\n        username,\r\n        email,\r\n        password,\r\n        role: \"Admin\",\r\n      })\r\n      .then((res) => {\r\n        const data = res.data.data;\r\n        props.callBackAddSuccess(data);\r\n        onClose();\r\n        HideLoadingIcon();\r\n      })\r\n      .catch((err) => {\r\n        HideLoadingIcon();\r\n      });\r\n  };\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      id=\"add-member-dialog\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Add member</DialogTitle>\r\n      <DialogContent>\r\n        <form noValidate autoComplete=\"off\">\r\n          <div className=\"content\">\r\n            <div class=\"username\">\r\n              <TextField\r\n                label=\"Username\"\r\n                defaultValue=\"Sample Data\"\r\n                value={username}\r\n                onChange={(e) => {\r\n                  handleChangeTextField(e, \"username\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"email\">\r\n              <TextField\r\n                label=\"Email\"\r\n                defaultValue=\"Sample Data\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  handleChangeTextField(e, \"email\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div class=\"password\">\r\n              <TextField\r\n                label=\"Password\"\r\n                defaultValue=\"Sample Data\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => {\r\n                  handleChangeTextField(e, \"password\");\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n            padding: \"8px\",\r\n          }}\r\n        >\r\n          <Button onClick={handleClose} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClickOK} color=\"secondary\" variant=\"contained\">\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nDialogAddMember.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  type: PropTypes.string,\r\n};\r\n","D:\\HocTapUIT\\admin-app-front-end\\src\\views\\help\\help.js",["123","124","125","126","127","128","129"],"D:\\HocTapUIT\\admin-app-front-end\\src\\firebase.js",[],{"ruleId":"130","severity":1,"message":"131","line":14,"column":8,"nodeType":"132","messageId":"133","endLine":14,"endColumn":18},{"ruleId":"130","severity":1,"message":"134","line":16,"column":8,"nodeType":"132","messageId":"133","endLine":16,"endColumn":16},{"ruleId":"130","severity":1,"message":"135","line":17,"column":8,"nodeType":"132","messageId":"133","endLine":17,"endColumn":18},{"ruleId":"130","severity":1,"message":"136","line":18,"column":8,"nodeType":"132","messageId":"133","endLine":18,"endColumn":15},{"ruleId":"130","severity":1,"message":"137","line":19,"column":8,"nodeType":"132","messageId":"133","endLine":19,"endColumn":18},{"ruleId":"130","severity":1,"message":"138","line":20,"column":8,"nodeType":"132","messageId":"133","endLine":20,"endColumn":22},{"ruleId":"130","severity":1,"message":"139","line":24,"column":8,"nodeType":"132","messageId":"133","endLine":24,"endColumn":24},{"ruleId":"130","severity":1,"message":"140","line":86,"column":5,"nodeType":"132","messageId":"133","endLine":86,"endColumn":21},{"ruleId":"130","severity":1,"message":"141","line":89,"column":5,"nodeType":"132","messageId":"133","endLine":89,"endColumn":16},{"ruleId":"130","severity":1,"message":"142","line":90,"column":5,"nodeType":"132","messageId":"133","endLine":90,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":227,"column":17,"nodeType":"132","messageId":"133","endLine":227,"endColumn":25},{"ruleId":"130","severity":1,"message":"144","line":245,"column":9,"nodeType":"132","messageId":"133","endLine":245,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":282,"column":22,"nodeType":"147","messageId":"148","endLine":282,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":288,"column":50,"nodeType":"147","messageId":"148","endLine":288,"endColumn":51},{"ruleId":"130","severity":1,"message":"140","line":59,"column":5,"nodeType":"132","messageId":"133","endLine":59,"endColumn":21},{"ruleId":"130","severity":1,"message":"141","line":62,"column":5,"nodeType":"132","messageId":"133","endLine":62,"endColumn":16},{"ruleId":"130","severity":1,"message":"142","line":63,"column":5,"nodeType":"132","messageId":"133","endLine":63,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":140,"column":17,"nodeType":"132","messageId":"133","endLine":140,"endColumn":25},{"ruleId":"130","severity":1,"message":"149","line":192,"column":9,"nodeType":"132","messageId":"133","endLine":192,"endColumn":25},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"130","severity":1,"message":"154","line":2,"column":34,"nodeType":"132","messageId":"133","endLine":2,"endColumn":44},{"ruleId":"130","severity":1,"message":"155","line":14,"column":8,"nodeType":"132","messageId":"133","endLine":14,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":74,"column":6,"nodeType":"158","endLine":74,"endColumn":8,"suggestions":"159"},{"ruleId":"150","replacedBy":"160"},{"ruleId":"152","replacedBy":"161"},{"ruleId":"130","severity":1,"message":"140","line":66,"column":5,"nodeType":"132","messageId":"133","endLine":66,"endColumn":21},{"ruleId":"130","severity":1,"message":"141","line":69,"column":5,"nodeType":"132","messageId":"133","endLine":69,"endColumn":16},{"ruleId":"130","severity":1,"message":"142","line":70,"column":5,"nodeType":"132","messageId":"133","endLine":70,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":150,"column":17,"nodeType":"132","messageId":"133","endLine":150,"endColumn":25},{"ruleId":"150","replacedBy":"162"},{"ruleId":"152","replacedBy":"163"},{"ruleId":"130","severity":1,"message":"164","line":27,"column":8,"nodeType":"132","messageId":"133","endLine":27,"endColumn":20},{"ruleId":"130","severity":1,"message":"140","line":90,"column":5,"nodeType":"132","messageId":"133","endLine":90,"endColumn":21},{"ruleId":"130","severity":1,"message":"141","line":93,"column":5,"nodeType":"132","messageId":"133","endLine":93,"endColumn":16},{"ruleId":"130","severity":1,"message":"142","line":94,"column":5,"nodeType":"132","messageId":"133","endLine":94,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":214,"column":17,"nodeType":"132","messageId":"133","endLine":214,"endColumn":25},{"ruleId":"130","severity":1,"message":"165","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":12},{"ruleId":"130","severity":1,"message":"166","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"140","line":68,"column":5,"nodeType":"132","messageId":"133","endLine":68,"endColumn":21},{"ruleId":"130","severity":1,"message":"141","line":71,"column":5,"nodeType":"132","messageId":"133","endLine":71,"endColumn":16},{"ruleId":"130","severity":1,"message":"142","line":72,"column":5,"nodeType":"132","messageId":"133","endLine":72,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":149,"column":17,"nodeType":"132","messageId":"133","endLine":149,"endColumn":25},{"ruleId":"150","replacedBy":"167"},{"ruleId":"152","replacedBy":"168"},{"ruleId":"130","severity":1,"message":"169","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"170","line":57,"column":6,"nodeType":"158","endLine":57,"endColumn":25,"suggestions":"171"},{"ruleId":"130","severity":1,"message":"172","line":9,"column":8,"nodeType":"132","messageId":"133","endLine":9,"endColumn":19},{"ruleId":"130","severity":1,"message":"140","line":81,"column":5,"nodeType":"132","messageId":"133","endLine":81,"endColumn":21},{"ruleId":"130","severity":1,"message":"141","line":84,"column":5,"nodeType":"132","messageId":"133","endLine":84,"endColumn":16},{"ruleId":"130","severity":1,"message":"142","line":85,"column":5,"nodeType":"132","messageId":"133","endLine":85,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":197,"column":17,"nodeType":"132","messageId":"133","endLine":197,"endColumn":25},{"ruleId":"130","severity":1,"message":"173","line":209,"column":5,"nodeType":"132","messageId":"133","endLine":209,"endColumn":29},{"ruleId":"130","severity":1,"message":"174","line":210,"column":5,"nodeType":"132","messageId":"133","endLine":210,"endColumn":32},{"ruleId":"156","severity":1,"message":"175","line":276,"column":6,"nodeType":"158","endLine":276,"endColumn":8,"suggestions":"176"},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'SimpleDialogDemo' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'setDense' is assigned a value but never used.","'handleClick' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'handleSaveMember' is assigned a value but never used.","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"'useHistory' is defined but never used.","'MailIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["179"],["177"],["178"],["177"],["178"],"'MoreVertIcon' is defined but never used.","'clsx' is defined but never used.","'lighten' is defined but never used.",["177"],["178"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'props.selectedItem.content' and 'props.type'. Either include them or remove the dependency array. If 'setData' needs the current value of 'props.selectedItem.content', you can also switch to useReducer instead of useState and read 'props.selectedItem.content' in the reducer.",["180"],"'WarningIcon' is defined but never used.","'isOpenDialogReportDetail' is assigned a value but never used.","'setIsOpenDialogReportDetail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchDataNoCommentQuestion'. Either include it or remove the dependency array.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [props.history]",{"range":"188","text":"189"},"Update the dependencies array to be: [open, props.selectedItem.content, props.type, selectedItem]",{"range":"190","text":"191"},"Update the dependencies array to be: [fetchDataNoCommentQuestion]",{"range":"192","text":"193"},[2109,2111],"[props.history]",[1632,1651],"[open, props.selectedItem.content, props.type, selectedItem]",[8061,8063],"[fetchDataNoCommentQuestion]"]